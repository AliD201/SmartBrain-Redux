{"version":3,"sources":["Compnents/Navigation/Navigation.js","Compnents/Logo/Logo.js","Compnents/ImageLinkForm/ImageLinkForm.js","Compnents/Rank/Rank.js","Compnents/FaceRecognition/FaceRecognition.js","Compnents/SignIn/SingIn.js","Compnents/Register/Register.js","Redux/Actions.js","Redux/constants.js","App-Redux.js","serviceWorker.js","Redux/reducers.js","index.js","Compnents/Logo/brain.png"],"names":["Navigation","props","isSignedIn","style","display","justifyContent","onClick","onRouteChange","className","Logo","tiltMaxAngleX","tiltMaxAngleY","perspective","scale","transitionSpeed","gyroscope","height","width","src","brain","alt","ImageLinkForm","onInputChange","onSubmit","type","onChange","defaultValue","Rank","FaceRecognition","box","id","imageUrl","top","topRow","right","rightCol","bottom","bottomRow","left","leftCol","SignIn","htmlFor","name","value","href","Register","setisSignedIn","bool","payload","MyApp","particlesOptions","particles","number","density","enable","value_area","shape","stroke","color","polygon","nb_sides","app","Clarifai","App","apiKey","connect","state","input","inputImage","route","signIn","dispatch","onInputCHange","event","text","target","console","log","faceBox","setroute","models","predict","FACE_DETECT_MODEL","then","response","image","document","getElementById","Number","left_col","top_row","right_col","bottom_row","faceLocation","outputs","data","regions","region_info","bounding_box","err","params","Boolean","window","location","hostname","match","initialState","routeitialState","signInitialState","rootReducer","combineReducers","action","Object","assign","logger","createLogger","store","createStore","applyMiddleware","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","error","message","module","exports"],"mappings":"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","file":"static/js/main.c6a8e6c1.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Navigation = (props) => {\r\n  const isSignedIn = props.isSignedIn;\r\n\r\n    if (isSignedIn){\r\n      return (\r\n        <nav style = {{ display :'flex', justifyContent:'flex-end'}}>\r\n          <p onClick={()=>props.onRouteChange('signIn')} className='f3 link dim black underline pa3 pointer'> Sign Out</p>\r\n        </nav>\r\n      )\r\n  }else {\r\n    return (\r\n        <nav style = {{ display :'flex', justifyContent:'flex-end'}}>\r\n          <p onClick={()=>props.onRouteChange('home')} className='f3 link dim black underline pa3 pointer'> Sign In</p>\r\n\r\n          <p onClick={()=>props.onRouteChange('register')} className='f3 link dim black underline pa3 pointer'> Register</p>\r\n        </nav>\r\n        )\r\n  }\r\n\r\n}\r\n\r\nexport default Navigation;\r\n","import React from 'react';\r\nimport Tilt from 'react-tilt'\r\nimport './Logo.css'\r\nimport brain from './brain.png'\r\nconst Logo = () => {\r\n  return (\r\n    <div className =\"pa3\"  style = {{ display :'flex', justifyContent:'flex-start'}}>\r\n      <Tilt\r\n        tiltMaxAngleX={100}\r\n       tiltMaxAngleY={50}\r\n       perspective={100}\r\n       scale={1}\r\n       transitionSpeed={2000}\r\n       gyroscope={false}\r\n       className=\"tilt br2 shadow-2 dib\"\r\n  >\r\n        <div className=\"br2 shadow-2 \" style={{ height: '150px', width:'150px'}}>\r\n           <img  className=\"pa3 logo\"src = {brain} alt =\" logo\"/>\r\n        </div>\r\n      </Tilt>\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default Logo;\r\n","import React from 'react';\r\nimport './ImageLinkForm.css'\r\nconst ImageLinkForm = (props) => {\r\n\r\n  const onInputChange = props.onInputChange;\r\n  const onSubmit = props.onSubmit;\r\n  return (\r\n    <div >\r\n      <p>\r\n          Dark magic happens bellow\r\n      </p>\r\n      <div  style = {{ display: 'flex', justifyContent:'center'}}>\r\n        <div className=\" shadow-2 pa4 w-60 form\" >\r\n          <input className=\"f4  w-70 pa2\" type=\"text\" onChange={onInputChange} defaultValue =\"https://i0.wp.com/post.medicalnewstoday.com/wp-content/uploads/sites/3/2020/03/GettyImages-1092658864_hero-1024x575.jpg?w=1155&h=1528\"></input>\r\n          <button className=\"f3 grow w-30 link white dib bg-light-purple ph3 pv2\" onClick={onSubmit}>Detect</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ImageLinkForm;\r\n","import React from 'react';\r\nconst Rank = () => {\r\n  return (\r\n    <div>\r\n      <div className = 'white f3'>\r\n        {'User , your Current rank is...'}\r\n      </div>\r\n        <div className = 'white f1'>\r\n          {'#5'}\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Rank;\r\n","import React from 'react';\r\nimport './FaceRecognition.css'\r\nconst FaceRecognition = (props) => {\r\nconst box = props.box;\r\n  return (\r\n    <div style={{display:'flex', justifyContent:'center'}}>\r\n      <div className= \"absolute pa2 \" style={{width:'500px',height:'auto'}}>\r\n        <img id = \"inputimage\" src={props.imageUrl} alt=\"to recognize\" />\r\n        <div className=\"boundingBox\" style={{top:box.topRow , right:box.rightCol , bottom:box.bottomRow , left:box.leftCol}}></div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FaceRecognition;\r\n","import React from 'react';\r\n\r\nconst SignIn = (props) => {\r\n  return (\r\n    <div className=\"ba br2 center w-100 w-25-l w-50-m shadow-5\">\r\n    <main className=\"  pa4 black-80\">\r\n<form className=\"measure center\">\r\n  <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n    <legend className=\"f1 fw6 ph0 mh0\">Sign In</legend>\r\n    <div className=\"mt3\">\r\n      <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n      <input className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"email\" name=\"email-address\"  id=\"email-address\"/>\r\n    </div>\r\n    <div className=\"mv3\">\r\n      <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n      <input className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"password\" name=\"password\"  id=\"password\"/>\r\n    </div>\r\n  </fieldset>\r\n  <div className=\"\">\r\n    <input className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" type=\"submit\" value=\"Sign in\"\r\n    onClick={()=>props.onRouteChange('home')}\r\n    />\r\n  </div>\r\n  <div className=\"lh-copy mt3\">\r\n    <p onClick={()=> props.onRouteChange('register')} href=\"#0\" className=\"f6 link dim black db pointer\">Register</p>\r\n  </div>\r\n</form>\r\n</main>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SignIn;\r\n","import React from 'react';\r\n\r\nconst Register = (props) => {\r\n  return (\r\n    <div className=\"ba br2 center w-100 w-25-l w-50-m shadow-5 \">\r\n    <main className=\"  pa4 black-80\">\r\n<form className=\"measure center\">\r\n  <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n    <legend className=\"f1 fw6 ph0 mh0\">Register</legend>\r\n    <div className=\"mt3\">\r\n      <label className=\"db fw6 lh-copy f6\" htmlFor=\"name\">name</label>\r\n      <input className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"text\" name=\"name\"  id=\"name\"/>\r\n    </div>\r\n    <div className=\"mt3\">\r\n      <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n      <input className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"email\" name=\"email-address\"  id=\"email-address\"/>\r\n    </div>\r\n    <div className=\"mv3\">\r\n      <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n      <input className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"password\" name=\"password\"  id=\"password\"/>\r\n    </div>\r\n  </fieldset>\r\n  <div className=\"\">\r\n    <input className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" type=\"submit\" value=\"Register & Sign in\"\r\n    onClick={()=>props.onRouteChange('home')}\r\n    />\r\n  </div>\r\n</form>\r\n</main>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Register;\r\n","import {\r\n  CHANGE_INPUT_FIELD,\r\n  SET_IMAGE_URL,\r\n  SET_BOX,\r\n  SET_ROUTE,\r\n  SIGNED_IN,\r\n  ON_SUBMIT\r\n} from './constants'\r\n\r\n\r\nexport const setInput = (text)=>{\r\n  console.log('activated');\r\n  return ({\r\n    type: CHANGE_INPUT_FIELD,\r\n    payload:text\r\n  })\r\n}\r\nexport const setimageUrl = (text)=> ({\r\n  type: SET_IMAGE_URL,\r\n  payload:text\r\n})\r\nexport const setbox = (obj)=> {\r\n\r\n\r\n  return ({\r\n    type: SET_BOX,\r\n    payload:obj\r\n  })\r\n}\r\n\r\n// this later should be like requestRobots for real sign in\r\nexport const setisSignedIn = (bool)=>{\r\n\r\n  return ({\r\n    type: SIGNED_IN,\r\n    payload:bool\r\n  })\r\n}\r\n\r\nexport const setroute = (route)=> ({\r\n  type: SET_ROUTE,\r\n  payload:route\r\n  })\r\n","export const CHANGE_INPUT_FIELD = 'CHANGE_INPUT_FIELD';\r\nexport const SET_IMAGE_URL = 'SET_IMAGE_URL';\r\nexport const SET_BOX = 'SET_BOX';\r\nexport const SET_ROUTE = 'SET_ROUTE';\r\nexport const SIGNED_IN = 'SIGNED_IN';\r\nexport const ON_SUBMIT = 'ON_SUBMIT';\r\n","import React , {useState} from 'react';\r\nimport './App.css';\r\nimport Navigation from './Compnents/Navigation/Navigation'\r\nimport Logo from './Compnents/Logo/Logo'\r\nimport ImageLinkForm from './Compnents/ImageLinkForm/ImageLinkForm'\r\nimport Rank from './Compnents/Rank/Rank'\r\nimport Particles from 'react-particles-js';\r\nimport FaceRecognition from './Compnents/FaceRecognition/FaceRecognition'\r\nimport SignIn from './Compnents/SignIn/SingIn'\r\nimport Register from './Compnents/Register/Register'\r\nimport 'tachyons'\r\nimport Clarifai from 'clarifai'\r\n// import config from './particlesjs-config.json'\r\n// redux\r\nimport { connect } from 'react-redux'\r\nimport {setInput, setimageUrl,setbox, setroute,  setisSignedIn} from './Redux/Actions'\r\n\r\n\r\nvar MyApp = {}; // Globally scoped object\r\n\r\n\r\nconst faceLocation = (faceBox) =>{\r\n  const image = document.getElementById('inputimage')\r\n  const width = Number(image.width);\r\n  const height = Number(image.height);\r\n  console.log(width, height);\r\n  return {\r\n    leftCol : faceBox.left_col *width,\r\n    topRow : faceBox.top_row * height,\r\n    rightCol : width - (faceBox.right_col*width),\r\n    bottomRow: height - (faceBox.bottom_row * height)\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return{\r\n      input: state.inputImage.input,\r\n      imageUrl : state.inputImage.imageUrl,\r\n      box: state.inputImage.box,\r\n      route: state.route.route,\r\n      isSignedIn: state.signIn.isSignedIn,\r\n\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) =>{\r\n\r\n  return {\r\n    onInputCHange: ( event ) => dispatch(setInput(event.target.value)),\r\n    onSubmit: ( event ) =>{MyApp.faceBox(dispatch)} ,\r\n\r\n    onRouteChange: (route) =>{\r\n      dispatch(setroute(route))\r\n      console.log(route)\r\n      if ( route === 'signIn'){\r\n        dispatch(setisSignedIn(false))\r\n      }else if ( route === 'home'){\r\n        dispatch(setisSignedIn(true))\r\n\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n\r\nconst particlesOptions = {\r\n  particles: {\r\n     number : {\r\n       value: 120,\r\n       density:{\r\n         enable :true,\r\n         value_area:800\r\n       }\r\n     },shape: {\r\n      type: \"circle\",\r\n      stroke: {\r\n        width: 0,\r\n        color: \"#000000\"\r\n      },\r\n      polygon: {\r\n        nb_sides: 5\r\n      }\r\n    }\r\n\r\n }\r\n}\r\n\r\nconst app = new Clarifai.App({\r\n apiKey: 'ac2d398fd77a4f3cb512614926e846af'\r\n});\r\n\r\n\r\nfunction App(props) {\r\n\r\n  MyApp.faceBox = (dispatch) =>{\r\n      console.log(\"hey\");\r\n      console.log(props.input);\r\n      dispatch(setimageUrl(props.input))\r\n      app.models.predict(Clarifai.FACE_DETECT_MODEL, props.input).then(\r\n      function(response) {\r\n        // do something with response\r\n        // response.outputs[0].data.regions[0].region_info.bounding_box\r\n        dispatch(setbox(faceLocation(response.outputs[0].data.regions[0].region_info.bounding_box)))\r\n        console.log( response.outputs[0].data.regions[0].region_info.bounding_box);\r\n      },\r\n      function(err) {\r\n        // there was an error\r\n        console.log(err);\r\n      }\r\n    );\r\n      console.log('clicked');\r\n  }\r\n\r\n\r\n\r\n  // const onInputCHange = (event) =>{\r\n  //   setInput(event.target.value)\r\n  //   console.log(event.target.value);\r\n  // }\r\n  // const onSubmit = (event) =>{\r\n  //   setimageUrl(input)\r\n  //   app.models.predict(Clarifai.FACE_DETECT_MODEL, input).then(\r\n  //   function(response) {\r\n  //     // do something with response\r\n  //     // response.outputs[0].data.regions[0].region_info.bounding_box\r\n  //     displayFaceBox(faceLocation(response.outputs[0].data.regions[0].region_info.bounding_box))\r\n  //     console.log( response.outputs[0].data.regions[0].region_info.bounding_box);\r\n  //   },\r\n  //   function(err) {\r\n  //     // there was an error\r\n  //     console.log(err);\r\n  //   }\r\n  // );\r\n  //   console.log('clicked');\r\n  // }\r\n  // const onRouteChange = (route) =>{\r\n  //   setroute(route)\r\n  //   if ( route === 'signin'){\r\n  //     setisSignedIn (false);\r\n  //   }else if ( route === 'home'){\r\n  //     setisSignedIn (true);\r\n  //   }\r\n  // }\r\n\r\n  return (\r\n    <div className=\"App\" >\r\n      <Particles className = \"particles\"\r\n                  params={particlesOptions} />\r\n\r\n        <Navigation onRouteChange={props.onRouteChange} isSignedIn={props.isSignedIn}/>\r\n\r\n          {\r\n            (props.route === 'signIn')?\r\n             <SignIn onRouteChange={props.onRouteChange}/>\r\n          : (props.route === 'register')?\r\n              <Register onRouteChange={props.onRouteChange} />\r\n          :\r\n              <div>\r\n              <Logo />\r\n              <Rank/>\r\n              <ImageLinkForm onInputChange={props.onInputCHange} onSubmit ={props.onSubmit}/>\r\n              <FaceRecognition imageUrl = {props.imageUrl} box= {props.box} />\r\n              </div>\r\n    }\r\n  </div>\r\n  )\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {\r\n  CHANGE_INPUT_FIELD,\r\n  SET_IMAGE_URL,\r\n  SET_BOX,\r\n  SET_ROUTE,\r\n  SIGNED_IN,\r\n  ON_SUBMIT\r\n} from './constants'\r\n\r\nconst initialState = {\r\n  input:'',\r\n  imageUrl:'https://i0.wp.com/post.medicalnewstoday.com/wp-content/uploads/sites/3/2020/03/GettyImages-1092658864_hero-1024x575.jpg?w=1155&h=1528',\r\n  box :{},\r\n\r\n}\r\n\r\nexport const inputImage = ( state = initialState, action = {}) =>{\r\n  switch ( action.type){\r\n    case CHANGE_INPUT_FIELD:\r\n      return Object.assign({},state, {input:action.payload})\r\n    case SET_IMAGE_URL:\r\n      return Object.assign({},state, {imageUrl:action.payload})\r\n    case SET_BOX :\r\n        return Object.assign({},state, {box:action.payload})\r\n    default:\r\n    return state;\r\n  }\r\n}\r\nconst routeitialState = {\r\n    route:'signIn'\r\n}\r\nexport const route = ( state = routeitialState, action = {}) =>{\r\n  switch ( action.type){\r\n    case SET_ROUTE:\r\n      return Object.assign({},state, {route:action.payload})\r\n    default:\r\n      return state;\r\n    }\r\n    }\r\n\r\n// should be changed with real signin\r\nconst signInitialState = {\r\n    isSignedIn : false\r\n}\r\n\r\nexport const signIn = ( state = signInitialState, action = {}) =>{\r\n  switch ( action.type){\r\n      case SIGNED_IN:\r\n        return Object.assign({},state, {isSignedIn:action.payload})\r\n      default:\r\n      return state;\r\n    }\r\n    }\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App-Redux';\nimport * as serviceWorker from './serviceWorker';\nimport {createStore, applyMiddleware, combineReducers } from 'redux'\nimport {Provider  } from 'react-redux'\nimport { connect } from 'react-redux'\nimport {createLogger } from 'redux-logger'\nimport {inputImage, route, signIn} from './Redux/reducers'\n\n// Redux \" store part \"\n// get a reducer inside the store\n// collecting reducers in an Object\nconst rootReducer = combineReducers({inputImage, route, signIn})\nconst logger = createLogger();\n// order matter here\nconst store = createStore(rootReducer,applyMiddleware(logger))\n// pass the provider the store so it will be the holder of the big picture\n\nReactDOM.render(\n  <React.StrictMode>\n  <Provider store={store}>\n    <App />\n  </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/brain.8348a5c0.png\";"],"sourceRoot":""}